version: '3.7'

services:
  sinatra:
    image: ${SWARMLET_REGISTRY}/sinatra-skeleton
    build: .
    env_file:
      - .env.production
    command:
      - bin/foreman
      - start
      - puma
    networks:
      - traefik-public
      - sinatra-private-network
    expose:
      - '5000'
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - traefik.enable=true
        - traefik.http.services.sinatra.loadbalancer.server.port=5000
        - traefik.http.routers.sinatra.rule=Host(`sinatra.${DOMAIN}`)
        - traefik.http.routers.sinatra.entrypoints=http,https
        - traefik.http.routers.sinatra.middlewares=redirect@file

  postgres:
    image: postgres:13
    env_file:
      - .env.postgres
    expose:
      - '5432'
    volumes:
      - postgres_data:/var/lib/postgresql
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "0.0.0.0", "-p", "5432", "-U", "sinatra"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - sinatra-private-network

  mysql:
    image: mariadb:10.6
    env_file:
      - .env.mysql
    expose:
      - '3306'
    volumes:
      - mysql_data:/var/lib/mysql
    # TODO: add healthcheck
    # healthcheck:
    #   test: ["CMD", "mysqladmin", "-h", "0.0.0.0", "-P", "3306", "ping"]
    #   interval: 10s
    #   timeout: 3s
    #   retries: 5
    networks:
      - sinatra-private-network

  redis:
    image: redis:6.2-buster
    expose:
      - '6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - sinatra-private-network

networks:
  sinatra-private-network:
  traefik-public:
    external: true

volumes:
  postgres_data:
  mysql_data:
  redis_data:
